布尔类型(bool)：
 1.真假对错，只有两种取值，True 和 False
 2.一定要首字母大写才是布尔类型，如果是小写，那么就被python计算器以为是变量

数值的比较 - 相等性
 1.是否相等？ ==  ，1 == 1 ，1 != 3

字符串的比较 -相等性
 1.“abc” == ‘abc' ，结果True，比较的是内容，单双引号只是告诉解析器是字符串
 2.“abc" != 'df' , 结果是True

字符串的比较 - 大小比较
 1.字符串大小的比较按 ASCII 码值来比较
 2.依次按照字符进行比较
 3.“abc" > "abe",a，b是相等的，c < e,结果是False
 查看ascii表：
 字母的ascii值进行比较，c对应的值是99，e对应的值是101

in 和 not in
 1.alist = [123,456]
 123 in alist,True
 456 not in alist,False
2.同样适用于字符串
 ‘123’ in ‘1234567’，True
 ‘0123’ in ‘1234567’ ,False
 ‘13’ in ‘1234567’，False，中间空一个，不连续就不在

布尔表达式
 1.定义：产生布尔值的表达式
 2.==   ，！=  ，>  ,<  ,>=  ,<= 都是比较操作符
 3.因为表达式可被求值(True,False)，所以它可写在赋值语句等号的右侧
 a = 1
 var = a > 1
 print(var)
 False
4.not
 not True == False

条件判断
1.条件语句 if 开头，条件是 布尔表达式（也可以是布尔值），后面有个冒号
 var = 0
 if var > 1:
 	print('yes')
 仅当条件成立时才运行下面缩进区块的语句，否则跳过这个区块的语句，然后继续运行区块后面的语句

字符串格式化的常见用法
1.最小宽度，不足空格补齐,
 ‘%10d' % 56 , 补齐左边
 '        56', 表示，和56一起共10个宽度
 ‘%-10d' % 56 ，补齐右边
 ‘56        ’
2.补零，宽度前面加0
 ‘%010d’ % 56
 ‘0000000056’
3.浮点数
 ‘%f.2f’ % 1234.567890
 '1234.57'
 ‘%f9.2f’ % 1234.567890
 '  1234.57'
 ‘%f09.2f’ % 1234.567890
 '001234.57'

python 3.6以后字符串格式化的新写法
1.name = "Fred"
 f"He said his name is {name}"
2.'{:.2f}'.format({1234.56780})
 '1234.57'
 f'{1234.56780:.2f}
 '1234.57'

字符串里面的转义符
1.字符串里面常常会有一些特殊字符以\开头
 print（‘Jack said \'hello'')
2.换行符
 print('line\nlin2')
3.r,代表就是字符串的内容，不会转义
 print(r'Jack said \'hello\'')





